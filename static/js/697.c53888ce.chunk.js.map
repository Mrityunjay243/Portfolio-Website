{"version":3,"file":"static/js/697.c53888ce.chunk.js","mappings":"4KAaA,QATA,SAAgBA,GACd,MAAM,MAAEC,GAAUD,EAClB,OAAOE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAAQC,SAAEH,GAClC,C,gICEA,MAAMI,EAAS,CACbC,UAAW,CACTC,OAAQ,GACRC,MAAO,GACPC,OAAQ,GACRC,aAAc,GAEhBC,mBAAoB,CAClBC,WAAY,aA4DhB,QAxDA,SAAgBZ,GAAQ,IAADa,EACrB,MAAM,OAAEC,GAAWd,EAiBbe,EAAOC,EAAAA,EAAUC,OAEvB,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAf,SAAA,EACEF,EAAAA,EAAAA,KAACkB,EAAAA,QAAM,CAACnB,MAAOa,IACdC,GACCb,EAAAA,EAAAA,KAACmB,EAAAA,GAAI,CAAAjB,UACHF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4BAA2BC,UACxCc,EAAAA,EAAAA,MAACI,EAAAA,EAAS,CAAAlB,SAAA,EAtBOmB,EAuBIR,EAAKQ,OAtBlCrB,EAAAA,EAAAA,KAAA,MAAIsB,MAAOnB,EAAOM,mBAAmBP,UACnCF,EAAAA,EAAAA,KAACuB,EAAAA,EAAa,CAACrB,SAAUmB,OAsBL,QADkBV,EAC7BE,EAAKE,cAAM,IAAAJ,OAAA,EAAXA,EAAaa,KAAKC,IACjBT,EAAAA,EAAAA,MAAA,OAAAd,SAAA,EACEF,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,MAAAE,SAAKuB,EAAK1B,QACT0B,EAAKC,MAAMF,KAAKG,IACfX,EAAAA,EAAAA,MAAA,OAAsBM,MAAO,CAAEM,QAAS,gBAAiB1B,SAAA,EACvDF,EAAAA,EAAAA,KAAA,OACEsB,MAAOnB,EAAOC,UACdyB,IAAKF,EAAKG,KACVC,IAAKJ,EAAK5B,SAEZC,EAAAA,EAAAA,KAAA,KAAAE,SAAIyB,EAAK5B,UAND4B,EAAK5B,WAJT0B,EAAK1B,iBAkBrBC,EAAAA,EAAAA,KAACgC,EAAAA,QAAe,OA3CGX,KA8C7B,C","sources":["components/Header.jsx","components/Skills.jsx"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../App.css';\r\n\r\nfunction Header(props) {\r\n  const { title } = props;\r\n  return <div className=\"header\">{title}</div>;\r\n}\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","import React, { } from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport PropTypes from 'prop-types';\r\nimport Fade from 'react-reveal';\r\nimport { Container } from 'react-bootstrap';\r\nimport Header from './Header';\r\nimport endpoints from '../constants/endpoints';\r\nimport FallbackSpinner from './FallbackSpinner';\r\n\r\nconst styles = {\r\n  iconStyle: {\r\n    height: 75,\r\n    width: 75,\r\n    margin: 10,\r\n    marginBottom: 0,\r\n  },\r\n  introTextContainer: {\r\n    whiteSpace: 'pre-wrap',\r\n  },\r\n};\r\n\r\nfunction Skills(props) {\r\n  const { header } = props;\r\n  // const [data, setData] = useState(null);\r\n\r\n  const renderSkillsIntro = (intro) => (\r\n    <h4 style={styles.introTextContainer}>\r\n      <ReactMarkdown children={intro} />\r\n    </h4>\r\n  );\r\n\r\n  // useEffect(() => {\r\n  //   fetch(endpoints.skills, {\r\n  //     method: 'GET',\r\n  //   })\r\n  //     .then((res) => res.json())\r\n  //     .then((res) => setData(res))\r\n  //     .catch((err) => err);\r\n  // }, []);\r\n  const data = endpoints.skills;\r\n\r\n  return (\r\n    <>\r\n      <Header title={header} />\r\n      {data ? (\r\n        <Fade>\r\n          <div className=\"section-content-container\">\r\n            <Container>\r\n              {renderSkillsIntro(data.intro)}\r\n              {data.skills?.map((rows) => (\r\n                <div key={rows.title}>\r\n                  <br />\r\n                  <h3>{rows.title}</h3>\r\n                  {rows.items.map((item) => (\r\n                    <div key={item.title} style={{ display: 'inline-block' }}>\r\n                      <img\r\n                        style={styles.iconStyle}\r\n                        src={item.icon}\r\n                        alt={item.title}\r\n                      />\r\n                      <p>{item.title}</p>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              ))}\r\n            </Container>\r\n          </div>\r\n        </Fade>\r\n      ) : <FallbackSpinner /> }\r\n    </>\r\n  );\r\n}\r\n\r\nSkills.propTypes = {\r\n  header: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Skills;\r\n"],"names":["props","title","_jsx","className","children","styles","iconStyle","height","width","margin","marginBottom","introTextContainer","whiteSpace","_data$skills","header","data","endpoints","skills","_jsxs","_Fragment","Header","Fade","Container","intro","style","ReactMarkdown","map","rows","items","item","display","src","icon","alt","FallbackSpinner"],"sourceRoot":""}